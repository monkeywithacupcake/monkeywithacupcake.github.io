---
layout: post
title:  "Round 2 Day 2 of 100 Days of Code"
categories: 100DaysofCode
---

I'm happy that today's post includes *R2D2* in the filename. Let's pretend I didn't change my file naming convention for this log just to make that happen. 

## Today's Progress
+ Made some progress on an instagram clone app, but I got stuck because of a change in the way that data needed to be stored threw off some earlier functions to retrieve and store data in firebase. I spent too much time on it to continue today, but this will require refactoring. This is one of the reasons that I get frustrated with the concepts of the nosql databases - because we then repeat data in multiple locations to improve speed for users...which means that changes to the structure of one thing can cascade.
+ Updated pods and cleaned out the build on my travel application. I just learned recently that you can use the Product menu to select "Clean" and then use the Option button to select "Clean Build Folder" which will get rid of all the old junk.
+ Forgot that I had ended on building out the Travel Item view in more detail (in the detail view controller) when I was working on the travel app last time, so I was completely surprised by the fails that I was getting because I chad not created the tet fields yet in the storyboard. 
+ Changed the date pickers to be datetime pickers. I tried to set the end date picker to have the minimum date set to the maximum of either today, the start date from the item (existing), or the selected start date. While my log statements suggest that the logic was working correctly to identify the latest of these date times, the end time datepicker still started at now. I will have to revisit this. I think it will be frustrating to be planning a trip in the future and always have to scroll to the future date. Even a few months of scrolling is annoying. 
+ Added the people back to the application. I had moved them from their own dictionary to part of the trip and then commented out all of the class related to them, so no people were showing up. This has been corrected. 
+ Tested out regions to see how the datepicker and calendar respond. When changing the region and language nothing happens as long as the Calendar remains Gregorian. However, a shift to a Japanese calendar breaks the application - it does not "crash", but the dates are wrong in the trip list, showing as year 4005 and out of order. 
+ Created a mini button within the main trip table view that will allow the user to click through to trip warnings instead of the trip if the trip has warnings. Changed the existing warnings label to a button and added a delegate from the tableview cell back to the main listview. It was easier than I thought. 


## Thoughts  
**Offline First** This morning, I saw a twitter post about offline first development and how most developers didn't really plan for it. Of course, recognizing myself in this, I followed some links and did a few searches and read some things. I'm not entirely sure, but I think that I have offline support for my data driven applications that use firebase based on the firebase documentation, but I will need to refactor my application to actually benefit. I also learned that firebase came out with another database platform that will be better for nested applications. The comparison shows that they have not only different structures but also different price bases: [Firebase Realtime Database v Firestore](https://firebase.google.com/docs/firestore/rtdb-vs-firestore)

In my exploration of offline first, I found this [fantastic short list](https://techbeacon.com/offline-first-web-mobile-apps-top-frameworks-components) of options. I briefly considered learning how to use ionic and angular after reading [Building An Ionic App with Offline Support](http://blog.ionic.io/building-an-ionic-app-with-offline-support-part-1/). I like the way that it uses SQL structure because NOSQL is breaking my brain. I also considered using [couchbase](https://developer.couchbase.com/documentation/mobile/1.4/installation/ios/index.html) because the syntax is similar to what I've started with firebase and I can relate to the conceptuatl approach. However, I'm trying to stay disciplined and finish the items in my todo list before stepping out for the next shiny thing. I put them on my "to check out" list. 

**When to clean?** I'm not super sure when we need to clean, but I think it makes sense to do it after each pod update or other change that might impact the build library. I don't know. Stuff like this really seems to be missing from guidance on developing applications.

**Timing** I want progress to happen faster.

**DateStorage** In swift, when you `let dateString = String(describing: Date())`, the output is always in GMT, or +0000. This is important because you need to remember to keep the calendar locale in mind and transitions to/from the GMT.

## Link to work
